// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteTecnico.Infrastructure.Context;

namespace TesteTecnico.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteTecnico.Domain.Entities.Escolaridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Escolaridade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Infantil"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Fundamental"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Médio"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Superior"
                        });
                });

            modelBuilder.Entity("TesteTecnico.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EscolaridadeId")
                        .HasColumnType("int");

                    b.Property<int>("HistoricoEscolarId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadeId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataNascimento = new DateTime(1989, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rodrigo.davanso@gmail.com",
                            EscolaridadeId = 1,
                            HistoricoEscolarId = 1,
                            Nome = "Rodrigo",
                            Sobrenome = "Davanso"
                        });
                });

            modelBuilder.Entity("TesteTecnico.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("TesteTecnico.Domain.Entities.Escolaridade", "Escolaridade")
                        .WithMany()
                        .HasForeignKey("EscolaridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escolaridade");
                });
#pragma warning restore 612, 618
        }
    }
}
